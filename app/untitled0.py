# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/133oUeNks88yG5D7t5GlnCOpPtbKLx5no
"""



# import packages
import requests, plotly.express as px, pandas as pd

def get_data():
    url = r"https://data.gov.il/api/3/action/datastore_search?resource_id=cbb2ed28-310d-4389-a1ec-64bb538fc090"

    response = requests.get(url)
    if response.status_code==200:
        data_json = response.json()
        #get only records
        records = data_json['result']['records']
        data = pd.json_normalize(records)
        #convert_data_to_geo
        return data
    else:
        print(f"Failed to retrieve data. Status code: {response.status_code}")
        return None



def pre_processing_data(data):
    columns_to_drop = ['_id', 'X', 'Y', 'ktuvet']
    data.drop(columns_to_drop, axis=1, inplace=True)
    data['Peelut mezahemet'] = data['Peelut mezahemet'].replace('-', 'אחר')
    data['Drisha lemigun mivnim'] = data['Drisha lemigun mivnim'].replace('------', 'אחר')
    data['Matzav Minhali'] = data['Matzav Minhali'].replace('-', 'אחר')

    # Preprocess 'Moed thilat tipul' to extract the year or leave as empty string
    data['Moed thilat tipul'] = data['Moed thilat tipul'].apply(lambda x: handle_year_conversion(x))
    data['Moed thilat tipul'] = pd.to_numeric(data['Moed thilat tipul'], errors='coerce').fillna(0).replace(41275, 0)

def handle_year_conversion(x):
    try:
        if '.' in x:
            float_x = float(x)
            if float_x.is_integer():
                return str(int(float_x))
        year = pd.to_datetime(x, errors='coerce').year
        if pd.notnull(year):
            return str(int(year))
    except Exception:
        pass
    return ''

pre_processing_data(data)
data.head()

def pie_chart_from_column(data, column_data,title):
  activity_counts = data[column_data].value_counts()
  fig = px.pie(values=activity_counts.values, names=activity_counts.index, title=title)
  return fig
def treatment_start_year_chart(data):
  column = 'Moed thilat tipul'
  year_counts =  year_counts = data[data[column] != 0][column].value_counts().sort_index()
  fig = px.bar(x=year_counts.index, y=year_counts.values, labels={'x': 'Year', 'y': 'Count'})
  fig.update_layout(title=f"Frequency of Each Year in '{column}'", xaxis_title="Year", yaxis_title="Frequency")
  return fig

polluting_activity_type_chart = pie_chart_from_column(data,'Peelut mezahemet','Distribution of polluting activity')
polluting_activity_type_chart.show()
requirement_for_safety_buildings = pie_chart_from_column(data,'Drisha lemigun mivnim','Requirement for safety buildings')
requirement_for_safety_buildings.show()
administrative_status = pie_chart_from_column(data,'Matzav Minhali', 'Distrubition of administrative_status')
administrative_status.show()
treatment_start_year_chart = treatment_start_year_chart(data)
treatment_start_year_chart.show()